     if(i==0 && j==0){
         if(!track[i+1][j])
          pathFinder(paths,path,maze,track,i+1,j);
         if(!track[i][j+1])
          pathFinder(paths,path,maze,track,i,j+1);

    }
    else if(i==maze.size()-1 && j==maze[0].size()-1){
       if(!track[i-1][j]) 
          pathFinder(paths,path,maze,track,i-1,j);
       if(!track[i][j-1])
          pathFinder(paths,path,maze,track,i,j-1);
    }

     else if(i==0 && j==maze[0].size()-1){
        if(!track[i+1][j])
        pathFinder(paths,path,maze,track,i+1,j);
        if(!track[i][j-1])
        pathFinder(paths,path,maze,track,i,j-1);
    }

    else if(i==maze.size()-1 && j==0){
        if(!track[i-1][j])
        pathFinder(paths,path,maze,track,i-1,j);
        if(!track[i][j+1])
        pathFinder(paths,path,maze,track,i,j+1);
    }

     else if(i==0){
     if(!track[i+1][j])
      pathFinder(paths,path,maze,track,i+1,j);
     if(!track[i][j+1])
      pathFinder(paths,path,maze,track,i,j+1);
      if(!track[i][j-1])
      pathFinder(paths,path,maze,track,i,j-1);
    }
    else if(j==0){
        if(!track[i+1][j])
        pathFinder(paths,path,maze,track,i+1,j);
        if(!track[i][j+1])
        pathFinder(paths,path,maze,track,i,j+1);
        if(!track[i-1][j])
        pathFinder(paths,path,maze,track,i-1,j);
    }
   
    else if(i==maze.size()-1){
        if(!track[i][j+1])
        pathFinder(paths,path,maze,track,i,j+1);
        if(!track[i-1][j])
        pathFinder(paths,path,maze,track,i-1,j);
        if(!track[i][j-1])
        pathFinder(paths,path,maze,track,i,j-1);
    }
    else if(j==maze[0].size()-1){
        if(!track[i+1][j])
        pathFinder(paths,path,maze,track,i+1,j);
        if(!track[i][j-1])
        pathFinder(paths,path,maze,track,i,j-1);
        if(!track[i-1][j])
        pathFinder(paths,path,maze,track,i-1,j);
    }

    
    